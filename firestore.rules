rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isStaff() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isStaff();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Products collection
    match /products/{productId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Categories collection
    match /categories/{categoryId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Orders collection
    match /orders/{orderId} {
      allow read: if isOwner(resource.data.userId) || isStaff();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isStaff() || 
                      (isOwner(resource.data.userId) && 
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']) &&
                       request.resource.data.status == 'cancelled');
      allow delete: if isAdmin();
    }
    
    // Order notes collection
    match /order_notes/{noteId} {
      allow read: if isStaff();
      allow write: if isStaff();
    }
    
    // Coupons collection
    match /coupons/{couponId} {
      allow read: if true; // Public read for validation
      allow write: if isStaff();
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true; // Public read access
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isOwner(resource.data.userId) || isStaff();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Cart collection
    match /carts/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Wishlist collection
    match /wishlists/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Addresses collection
    match /addresses/{addressId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Payment transactions
    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isStaff();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isStaff();
      allow delete: if isAdmin();
    }
    
    // Refunds collection
    match /refunds/{refundId} {
      allow read: if isStaff();
      allow write: if isStaff();
    }
    
    // Inventory logs
    match /inventory_logs/{logId} {
      allow read: if isStaff();
      allow write: if isStaff();
    }
    
    // Admin activity logs
    match /admin_activity/{activityId} {
      allow read: if isStaff();
      allow create: if isStaff();
      allow update, delete: if isAdmin();
    }
    
    // Blog posts
    match /blog_posts/{postId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Banners collection
    match /banners/{bannerId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Popups collection
    match /popups/{popupId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Countdowns collection
    match /countdowns/{countdownId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Pages collection (for CMS)
    match /pages/{pageId} {
      allow read: if true; // Public read access
      allow write: if isStaff();
    }
    
    // Settings collection
    match /settings/{settingId} {
      allow read: if true; // Public read for site settings
      allow write: if isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId) || isStaff();
      allow create: if isStaff();
      allow update: if isOwner(resource.data.userId) || isStaff();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Analytics collection
    match /analytics/{analyticsId} {
      allow read: if isStaff();
      allow write: if isStaff();
    }
    
    // Support tickets
    match /support_tickets/{ticketId} {
      allow read: if isOwner(resource.data.userId) || isStaff();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isOwner(resource.data.userId) || isStaff();
      allow delete: if isAdmin();
    }
    
    // Newsletter subscriptions
    match /newsletter_subscriptions/{subscriptionId} {
      allow read: if isStaff();
      allow create: if true; // Allow anonymous subscriptions
      allow update, delete: if isStaff();
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
